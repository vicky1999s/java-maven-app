def FILENAME = 'UNKNOWN'
def MONTH    = 'UNKNOWN'
def YEAR     = 'UNKNOWN'

pipeline{
    agent {
        label 'linux'
    }

    tools{
        maven 'maven-linux'
    }

    stages{

        stage('BUILD'){
            steps{
                echo "maven home: ${env.MAVEN_HOME}"
                sh 'mvn -DskipTests package'
                echo '=====build completed======='
            }
        }

        stage('TEST'){
            steps{
                script{
                    MONTH = sh(returnStdout: true, script: 'date "+%m"').trim()
                    YEAR = sh(returnStdout: true, script: 'date "+%Y"').trim()
                    PROJECT_NAME = sh(returnStdout: true, script: 'mvn help:evaluate -Dexpression=project.name -q -DforceStdout').trim()
                    PROJECT_VERSION = sh(returnStdout: true, script: 'mvn help:evaluate -Dexpression=project.version -q -DforceStdout').trim()
                    FILENAME = sh(returnStdout: true, script: "echo \"${PROJECT_NAME}-${PROJECT_VERSION}\"").trim()
                }

                sh 'mvn test'
                echo "filename: ${FILENAME}.jar"
            }

            post{
                always{
                    junit testResults: 'target/surefire-reports/*.xml'
                }

                success{
                    zip defaultExcludes: false, dir: '', exclude: '', glob: "appspec.yml, scripts/*, target/${FILENAME}.jar", overwrite: true, zipFile: "${FILENAME}.zip"
                    withAWS(credentials:'jenkins-controller'){
                        s3Upload(pathStyleAccessEnabled: true, payloadSigningEnabled: true, file:"${FILENAME}.zip", bucket:'vickyjenkinstesting', path:"${YEAR}/${MONTH}/")
                    }
                }
            }
        }

        stage('DEPLOY'){
            steps{
                echo "FILENAME: ${FILENAME}"
                withAWS(credentials:'jenkins-controller', region:'ap-south-1'){
                    createDeployment(
                            s3Bucket: 'vickyjenkinstesting',
                            s3Key: "${YEAR}/${MONTH}/${FILENAME}.zip",
                            s3BundleType: 'zip', // [Valid values: tar | tgz | zip | YAML | JSON]
                            applicationName: 'java-maven-app',
                            deploymentGroupName: 'java-maven-app',
                            deploymentConfigName: 'CodeDeployDefault.AllAtOnce',
                            description: 'Test Deployment',
                            waitForCompletion: 'true',
                            ignoreApplicationStopFailures: 'false',
                            fileExistsBehavior: 'OVERWRITE'// [Valid values: DISALLOW, OVERWRITE, RETAIN]
                    )
                }
            }
        }
    }
}